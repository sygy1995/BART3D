#!/usr/bin/env python3

"""Description: BART3D main executable

Copyright (c) 2018, 2019 Chongzhi Zang, Yifan Zhang <yz4hc@virginia.edu>, Zhenjia Wang

This code is free software; you can redistribute it and/or modify it 
under the terms of the BSD License.

@status: release candidate
@version: $Id$
@author: Chongzhi Zang, Yifan Zhang, Zhenjia Wang
@contact: yz4hc@virginia.edu
"""

import os,sys,argparse
import configparser

script_dir = os.path.dirname(os.path.realpath(__file__))

try:
    import BART3D
except:
    sys.path.append(os.path.join(script_dir, "../"))
    import BART3D
from BART3D.main import BART3D


def prepare_argparser():

    """
    Prepare optparser object.
    """    
    description = '''%(prog)s -- Binding Analysis for Regulation of Transcription with Hi-C \n
    BART3D predicts transcription factors (TFs) that function to regulate \n
    a differential 3D genomics interaction profile calculated from raw interaction matrix \n
    by leveraging a large collection of publicly available ChIP-seq data in \n
    human and mouse.'''
    epilog = "For command line options of each command, type: %(prog)s COMMAND -h"

    parser = argparse.ArgumentParser(description='Identify transcription factors which may cause the different interactions between two Hi-C profiles.')

    parser.add_argument('-ci', '--controlindex', action='store', type=str, dest='c_index', required=True, help='HiC-pro index file for control sample', metavar='<str>')
    parser.add_argument('-cm', '--controlmatrix', action='store', type=str, dest='c_matrix', required=True, help='HiC-pro matrix file for control sample', metavar='<str>')
    parser.add_argument('-ti', '--treatindex', action='store', type=str, dest='t_index', required=True, help='HiC-pro index file for treatment sample', metavar='<str>')
    parser.add_argument('-tm', '--treatmatrix', action='store', type=str, dest='t_matrix', required=True, help='HiC-pro matrix file for treatment sample', metavar='<str>')

    parser.add_argument('-s', '--species',dest='species',type=str,metavar='<species>',choices=['hg38','mm10'],required=True,help='Species, please choose from "hg38" or "mm10".')

    parser.add_argument('-o', '--outdir', action='store', type=str, dest='outdir', help='output directory for Hi-C bart', metavar='<str>', default='BART3D_output/')
    parser.add_argument('-r', '--region', action='store', type=int, dest='region', help='Regions to expand when finding interactions', metavar='<int>', default=200000)

    args = parser.parse_args()

    return args


def main():
    """
    The Main function/pipeline for BART
    """
    # Parse options
    args = prepare_argparser()
    # args = argparser.parse_args()
    
    if len(sys.argv)<5:
        argparser.print_help()
        exit(1)  

    sys.stdout.write('\nBART3D -- Binding Analysis for Regulation of Transcription with Hi-C\n\n')
    BART3D(args)

if __name__=='__main__':
    try:
        main()
    except KeyboardInterrupt:
        sys.stderr.write('User interrupted me! :) Bye~\n')
        sys.exit(0)
